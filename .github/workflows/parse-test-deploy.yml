name: Scripts Actions

on:
  workflow_call:
    branches: [ main ]
  
jobs:
  update-branch:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: everlytic/branch-merge@1.1.0
        with:
          github_token: ${{ secrets.CROSS_REPO_ACCESS_TOKEN }}
          source_ref: 'main'
          target_branch: ${{ github.ref }}
          commit_message_template: '[RasentBot] Merged {source_ref} into {target_branch}'

  parse-schema:
    if: contains(github.event.repository.name, 'Schema')
    runs-on: ubuntu-latest
    env:
      REPO: ${{ github.event.repository.name }}
      WORKING_DIR: schema
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v2

      - name: Checking schema well-formedness
        run: python3 lint_schema.py schema

      - name: Checking empty schema sections
        run: python3 empty_sections.py schema

      - name: Checking responsible person sections
        run: python3 responsible_person.py schema

      - name: Checking d:list inside d:list
        run: python3 d_list_markup.py schema

      - name: Checking missing schema sections
        run: python3 missing_sections.py schema

      - name: Checking for mismatched ComplianceDocument tags
        if: "!contains(github.event.repository.name, 'NonRes')"
        run: python3 compliance_document.py schema

      - name: Checking for mismatched Header
        run: python3 header.py schema

      - name: Checking for duplicate elements in each schema section
        run: python3 duplicate_elements.py schema

      - name: Checking for incorrect end note naming in each schema section
        run: python3 end_notes.py schema

      - name: Checking for empty displayterm tags
        if: "!contains(github.event.repository.name, 'NonRes')"
        run: python3 empty_displayterm.py schema

      - name: Checking for missing base elements
        run: python3 missing_base_elements.py schema

      - name: Checking for missing namespace declarations
        run: python3 namespace_prefixes.py schema

      - name: Checking for a mismatch between targetNamespace
        if: "!contains(github.event.repository.name, 'NonRes')"
        run: python3 document_mismatch.py schema

      - name: Upload schema folder
        uses: actions/upload-artifact@master
        with:
          name: schema
          path: ${{ github.event.repository.name }}/schema

  deploy-schema:
    if: contains(github.event.repository.name, 'Stylesheet') || contains(github.event.repository.name, 'Development')
    needs: parse-schema
    runs-on: windows-latest

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v2

      - name: Download build folder
        uses: actions/download-artifact@v2
        with:
          name: schema
          path: schema

      - name: Running deploy-schema script
        run: .\deploy-schema-windows-amd64.exe -d ./deployed -s ./schema -v 2019.1.003

  parse-stylesheet:
    if: ${{ github.event.client_payload.message.type == 'stylesheet' }}
    runs-on: ubuntu-latest
    env:
      REPO: ${{ github.event.repository.name }}

    steps:
      - name: Checkout current repository
        uses: actions/checkout@v2

      - name: Checking stylesheet well-formedness
        run: python3 lint_stylesheet.py schema
        working-directory: stylesheet

  run-transformation:
    if: ${{ github.event.client_payload.message.type == 'stylesheet' }}
    needs: parse-stylesheet
    runs-on: windows-latest
    env:
      REPO: ${{ github.event.repository.name }}

    steps:
      - name: Installing Ibex PDF
        run: |
          Invoke-WebRequest -Uri http://www.xmlpdf.com/builds/ibex-4.11.45.0-pro.msi -OutFile ibex-installer.msi
          msiexec /i ibex-installer.msi /passive /qn
        working-directory: ibex

      - name: Checkout current repository
        uses: actions/checkout@v2

      - name: Checking stylesheet well-formedness
        run: python3 lint_stylesheet.py $env:REPO
        working-directory: stylesheet

      - name: Running transformation scenario
        run: |
          cp xmlpdf.lic "C:\Program Files (x86)\Visual Programming\Ibex PDF Creator 4.11.43.0\"
          & "C:\Program Files (x86)\Visual Programming\Ibex PDF Creator 4.11.43.0\ibex40.exe" -xsl $env:REPO/stylesheet/CF2R/CF2RMCH01bE.xsl $env:REPO/test/herinson/xml/CF2RMCH01bE1.xml $env:REPO/test/herinson/pdf/CF2RMCH01bE1.pdf
        working-directory: ibex
